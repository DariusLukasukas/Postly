import { useUser } from "@/actions/useUser";
import { authOptions } from "@/app/api/auth/[...nextauth]/route";
import Header from "@/components/header/Header";
import SignInOrRegister from "@/components/home/SignInOrRegister";
import PostFeed from "@/components/posts/PostFeed";
import PostFeedSkeleton from "@/components/posts/PostFeedSkeleton";
import UserBio from "@/components/profile/UserBio";
import UserHero from "@/components/profile/UserHero";
import { getServerSession } from "next-auth";
import { Suspense } from "react";

export const metadata = {
  title: "Postly - Profile",
  description: "Generated by create next app",
};

export default async function UserPage({
  params,
}: {
  params: { user: string };
}) {
  const user = await useUser(params.user);
  const session = await getServerSession(authOptions);

  return (
    <>
      <Header label={"@" + user.username} showBackButton={true} />
      {!session && <SignInOrRegister />}
      <UserHero profileImage={user.profileImage} coverImage={user.coverImage} />
      {/* @ts-expect-error Async Server Component */}
      <UserBio userId={params.user} />
      <Suspense fallback={<PostFeedSkeleton listsToRender={4} />}>
        {/* @ts-expect-error Async Server Component */}
        <PostFeed userId={params.user} />
      </Suspense>
    </>
  );
}
